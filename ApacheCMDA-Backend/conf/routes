# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page - we use the @controllers syntax here so that the router knows we are referring to a class. In turn it
# will call on the GlobalSettings.getController method to resolve the actual controller instance.
# GET     /                           @controllers.Application.index

# Climate Service
GET           /climateService/getClimateService/:name/json                                              @controllers.ClimateServiceController.getClimateService(name: String, format: String="json")
GET           /climateService/getClimateService/id/:id                                                  @controllers.ClimateServiceController.getClimateServiceById(id: Long)
GET           /climateService/getAllClimateServices/json                                                @controllers.ClimateServiceController.getAllClimateServices(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByCreateTime/json                          @controllers.ClimateServiceController.getAllClimateServicesOrderByCreateTime(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByLatestAccessTime/json                    @controllers.ClimateServiceController.getAllClimateServicesOrderByLatestAccessTime(format: String="json")
GET           /climateService/getAllMostUsedClimateServices/json                                        @controllers.ClimateServiceController.getAllClimateServicesOrderByCount(format: String="json")
POST          /climateService/addClimateService                                                         @controllers.ClimateServiceController.addClimateService
GET           /climateService/getAllServiceEntries/json                                                 @controllers.ClimateServiceController.getAllServiceEntries(format: String="json")
POST          /climateService/addServiceEntry                                                           @controllers.ClimateServiceController.addServiceEntry
PUT           /climateService/updateClimateService/id/:id                                               @controllers.ClimateServiceController.updateClimateServiceById(id: Long)
PUT           /climateService/updateClimateService/name/:oldName                                        @controllers.ClimateServiceController.updateClimateServiceByName(oldName: String)
DELETE        /climateService/deleteClimateService/id/:id                                               @controllers.ClimateServiceController.deleteClimateServiceById(id: Long)
DELETE        /climateService/deleteClimateService/name/:name                                           @controllers.ClimateServiceController.deleteClimateServiceByName(name: String)

# Instrument
GET           /instrument/getAllInstruments/json                                                        @controllers.InstrumentController.getAllInstruments(format: String="json")
GET           /instrument/getInstrument/id/:id/json                                                     @controllers.InstrumentController.getInstrument(id: Long, format: String="json")
POST          /instrument/addInstrument                                                                 @controllers.InstrumentController.addInstrument
PUT           /instrument/updateInstrument/id/:id                                                       @controllers.InstrumentController.updateInstrumentById(id: Long)
DELETE        /instrument/deleteInstrument/id/:id                                                       @controllers.InstrumentController.deleteInstrument(id: Long)

# Dataset
GET           /dataset/getAllDatasets/json                                                              @controllers.DatasetController.getAllDatasets(format: String="json")
GET           /dataset/getDataset/id/:id/json                                                           @controllers.DatasetController.getDataset(id: Long, format: String="json")
POST          /dataset/addDataset                                                                       @controllers.DatasetController.addDataset
PUT           /dataset/updateDataset/id/:id                                                             @controllers.DatasetController.updateDatasetById(id: Long)
DELETE        /dataset/deleteDataset/id/:id                                                             @controllers.DatasetController.deleteDataset(id: Long)
POST		  /dataset/queryDataset																		@controllers.DatasetController.queryDatasets

# Parameter
GET           /parameter/getAllParameters/json                                                          @controllers.ParameterController.getAllParameters(format: String="json")
GET           /parameter/getParameter/service/:id/name/:name/json                                       @controllers.ParameterController.getParameterByName(id:Long, name: String, format: String="json")
GET           /parameter/getParameter/id/:id/json                                                       @controllers.ParameterController.getParameterById(id: Long, format: String="json")
POST          /parameter/addParameter                                                                   @controllers.ParameterController.addParameter
PUT           /parameter/updateParameter/id/:id                                                         @controllers.ParameterController.updateParameterById(id: Long)
PUT           /parameter/updateParameter/name/:oldName                                                  @controllers.ParameterController.updateParameterByName(oldName: String)
DELETE        /parameter/deleteParameter/service/:id/name/:name                                         @controllers.ParameterController.deleteParameterByName(id:Long, name: String)

#Posts
GET           /posts/postId/:id                                                                         @controllers.PostController.getPost(id: Long, format: String="json")
GET           /posts/userId/:id                                                                         @controllers.PostController.getAllPostsByUser(id: Long, format: String="json")
GET           /posts/getAllPosts/json                                                                   @controllers.PostController.getAllPosts(format: String="json")
GET           /posts/getMostPopularPosts                                                                @controllers.PostController.getMostPopularPosts(format: String="json")
POST          /posts/add                                                                                @controllers.PostController.addPost
PUT           /posts/addLike/:postId/user/:userId                                                       @controllers.PostController.addPostLike(postId: Long, userId: Long)
GET           /posts/getLikeUsers/:id                                                                   @controllers.PostController.getLikeUsers(id: Long, format: String="json");
PUT           /posts/update/:id                                                                         @controllers.PostController.updatePost(id: Long)
PUT           /posts/updateVisibility/:id                                                               @controllers.PostController.updatePostVisibility(id: Long)
PUT           /posts/addSharedUser/:userId                                                              @controllers.PostController.addSharedUser(userId: Long)
GET           /posts/getSharedUser/:postId                                                              @controllers.PostController.getSharedUser(postId: Long, format: String="json")
GET           /posts/getSharedPosts/:userId                                                             @controllers.PostController.getSharedPosts(userId: Long, format: String="json")
DELETE        /posts/delete/:id                                                                         @controllers.PostController.deletePost(id: Long)
DELETE        /posts/deleteByUser/:id                                                                   @controllers.PostController.deletePostsByUser(id: Long)
GET           /posts/searchPosts/:key                                                                   @controllers.PostController.searchPosts(key: String, format: String="json")

#Comments
POST          /comments/add                                                                             @controllers.CommentController.addComment
DELETE        /comments/delete/:id                                                                      @controllers.CommentController.deleteComment(id: Long)
GET           /comments/getByPost/:id                                                                   @controllers.CommentController.getCommentsByPost(id: Long, format: String="json")
DELETE        /comments/deleteByPost/:id                                                                @controllers.CommentController.deleteCommentsByPost(id: Long)

# Users
GET           /users/:id                                                                                @controllers.UserController.getUser(id: Long, format: String="json")
GET           /users/username/:username                                                                 @controllers.UserController.getUserByUserName(username: String, format: String="json")
POST          /users/add                                                                                @controllers.UserController.addUser
POST          /users/uploadPhoto/:id                                                                    @controllers.UserController.uploadUserPhoto(id: Long)
PUT           /users/:id                                                                         @controllers.UserController.updateUser(id: Long)
DELETE        /users/delete/:id                                                                         @controllers.UserController.deleteUser(id: Long)
GET           /users/getPhoto/:id                                                                       @controllers.UserController.getUserPhoto(id: Long)
GET			  /users/getAllUsers/json																	@controllers.UserController.getAllUsers(format: String="json")
GET           /users/getFollowers/:id                                                                   @controllers.UserController.getFollowers(id: Long, format: String="json")
GET           /users/getFollowedUsers/:id                                                               @controllers.UserController.getFollowedUsers(id: Long, format: String="json")
GET           /users/getSharedPosts/:id                                                                 @controllers.UserController.getSharedPosts(id:Long, format: String="json")
POST		  /users/isUserValid																		@controllers.UserController.isUserValid
DELETE		  /users/delete/userName/:userName/password/:password										@controllers.UserController.deleteUserByUserNameandPassword(userName: String, password: String)
PUT           /users/:followerID/follow/:followeeID                                                     @controllers.UserController.addFollowee(followerID: Long, followeeID: Long)
DELETE        /users/:followerID/unfollow/:followeeID                                                   @controllers.UserController.removeFollowee(followerID: Long, followeeID: Long)
POST          /users/isUserNameExisted                                                                  @controllers.UserController.isUserNameExisted()
POST		  /users/isEmailExisted                                                                     @controllers.UserController.isEmailExisted()
GET           /users/getFollowingPosts/:id                                                              @controllers.UserController.getFollowingPosts(id:Long, format: String="json")
GET           /users/fuzzySearch/:key                                                                   @controllers.UserController.fuzzySearchUsers(key: String, format: String="json")
GET           /users/exactSearch                                                                        @controllers.UserController.exactSearchUsers(format: String="json")

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                             controllers.Assets.at(path="/public", file)

# A Catch all options route
OPTIONS       /*all                                                                                     @controllers.Application.preflight(all: String)